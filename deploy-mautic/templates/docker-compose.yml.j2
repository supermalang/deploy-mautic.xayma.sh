#jinja2: lstrip_blocks: True
version: '3'

x-mautic-volumes:
  &mautic-volumes
  - {{xayma_mautic_paths.config}}:/var/www/html/config:z
  - {{xayma_mautic_paths.logs}}:/var/www/html/var/logs:z
  - {{xayma_mautic_paths.files}}:/var/www/html/docroot/media/files:z
  - {{xayma_mautic_paths.images}}:/var/www/html/docroot/media/images:z
  - {{xayma_mautic_paths.cron}}:/opt/mautic/cron:z
  - mautic-docroot:/var/www/html/docroot:z

services:
  db:
    image: mysql:8.0
    container_name: {{fullinstancename_db}}
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD={{credentials.mysql_rootpassword}}
      - MYSQL_DATABASE={{credentials.mysql_database}}
      - MYSQL_USER={{credentials.mysql_user}}
      - MYSQL_PASSWORD={{credentials.mysql_password}}
    volumes: 
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: mysqladmin --user={{credentials.mysql_user}} --password={{credentials.mysql_password}} ping
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 10

  nginx:
    image: nginx
    container_name: {{fullinstancename_nginx}}
    restart: unless-stopped
    volumes:
      - {{xayma_mautic_paths.nginxconf}}:/etc/nginx/conf.d/default.conf
      - mautic-docroot:/var/www/html/docroot:z
    depends_on:
      - mautic_web
    ports:
      - 8002:80
    networks:
      - frontend
      - default
    {% if preferred_reverse_proxy == "traefik"%}
    labels:
        - traefik.enable=true
        - traefik.http.routers.{{fullinstancename_nginx}}.rule={% for domain_item in domains %}Host(`{{ domain_item }}`) {{ "||" if not loop.last else '' }} {% endfor %}     
        - traefik.http.routers.{{fullinstancename_nginx}}.entrypoints=web, websecure
        - traefik.http.routers.{{fullinstancename_nginx}}.tls=true
        - traefik.http.routers.{{fullinstancename_nginx}}.tls.certresolver=production
        - traefik.http.services.{{fullinstancename_nginx}}.loadbalancer.server.port=80
    {% endif %}

  mautic_web:
    image: {{_name}}:{{version}}-{{variation}}
    container_name: {{fullinstancename_web}}
    restart: unless-stopped
    volumes: *mautic-volumes
    environment:
      - DOCKER_MAUTIC_LOAD_TEST_DATA=false
      - DOCKER_MAUTIC_RUN_MIGRATIONS=false
    env_file:
      - mautic_env
    healthcheck:
      test: cgi-fcgi -bind -connect 127.0.0.1:9000
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 100
    depends_on:
      db:
        condition: service_healthy

  mautic_cron:
    image: {{_name}}:{{version}}-{{variation}}
    container_name: {{fullinstancename_cron}}
    restart: unless-stopped
    volumes: *mautic-volumes
    environment:
      - DOCKER_MAUTIC_ROLE=mautic_cron
    env_file:
      - mautic_env
    depends_on:
      mautic_web:
        condition: service_healthy

  mautic_worker:
    image: {{_name}}:{{version}}-{{variation}}
    container_name: {{fullinstancename_worker}}
    restart: unless-stopped
    volumes: *mautic-volumes
    environment:
      - DOCKER_MAUTIC_ROLE=mautic_worker
    env_file:
      - mautic_env
    depends_on:
      mautic_web:
        condition: service_healthy

volumes:
  mysql-data:
  mautic-docroot:

networks:
  frontend:
    external:
      name: {{ front_network }}